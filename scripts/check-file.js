#!/usr/bin/env node
/* eslint-disable no-console */

/**
 * Script para verificar un archivo espec√≠fico con ESLint y TypeScript
 * Uso: node scripts/check-file.js <archivo>
 */

import { execSync } from 'child_process'
import { existsSync } from 'fs'
import path from 'path'

const filePath = process.argv[2]

if (!filePath) {
  console.error('‚ùå Error: Debes proporcionar la ruta del archivo')
  console.log('Uso: npm run check-file <archivo>')
  console.log('Ejemplo: npm run check-file src/pages/UserProfilePage.vue')
  process.exit(1)
}

if (!existsSync(filePath)) {
  console.error(`‚ùå Error: El archivo ${filePath} no existe`)
  process.exit(1)
}

const fileName = path.basename(filePath)
console.log(`üîç Verificando archivo: ${fileName}`)
console.log('='.repeat(60))

let hasErrors = false

try {
  // 1. Verificar con ESLint (sintaxis y reglas)
  console.log('üìã Ejecutando ESLint (sintaxis y reglas)...')
  try {
    execSync(`npx eslint "${filePath}" --format=stylish`, { stdio: 'inherit' })
    console.log('‚úÖ ESLint: Sin errores de sintaxis o reglas')
  } catch (error) {
    console.log('‚ùå ESLint: Errores de sintaxis o reglas encontrados')
    hasErrors = true
  }

  console.log('')

  // 2. Verificar tipos con TypeScript
  console.log('üîß Verificando tipos con TypeScript...')
  try {
    console.log('üîç Usando vue-tsc para verificaci√≥n completa...')

    // Capturar la salida para filtrar errores del archivo espec√≠fico
    execSync('npx vue-tsc --noEmit', {
      stdio: 'inherit',
      cwd: process.cwd()
    })
    console.log('‚úÖ TypeScript: Sin errores de tipos')
  } catch (error) {
    console.log('‚ùå TypeScript: Errores de tipos encontrados')
    console.log(
      '‚ÑπÔ∏è  Para ver errores espec√≠ficos de este archivo, revisa la salida anterior'
    )
    hasErrors = true
  }

  console.log('')
  console.log('='.repeat(60))

  if (hasErrors) {
    console.log('‚ùå Verificaci√≥n completada con errores')
    console.log('')
    console.log('üí° Comandos √∫tiles:')
    console.log(
      '   npm run lint -- --fix <archivo>  # Arreglar errores de ESLint'
    )
    console.log('   npm run type-check               # Solo verificar tipos')
    console.log('   npm run fix                      # Arreglar formato y lint')
    process.exit(1)
  } else {
    console.log('‚úÖ Verificaci√≥n completada sin errores')
  }
} catch (error) {
  console.error('‚ùå Error durante la verificaci√≥n:', error.message)
  process.exit(1)
}
